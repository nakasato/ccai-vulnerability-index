import streamlit as st

import os
import pandas as pd
from dotenv import load_dotenv, find_dotenv
import openai
from langchain.chat_models import ChatOpenAI # remove
from langchain_core.prompts import ChatPromptTemplate # remove
import plotly.express as px
import country_comparison_chart as compare_countries

from langchain.embeddings.openai import OpenAIEmbeddings
from langchain_pinecone import PineconeVectorStore
from langchain.chains import RetrievalQAWithSourcesChain 

load_dotenv(find_dotenv())
openai.api_key = os.environ['OPENAI_KEY']
pinecone_api_key = os.environ.get('PINECONE_KEY')

LLM_NAME = 'gpt-4o-mini'
TEMP = 0.0
INDEX_NAME = 'ccai-kb'
EMBEDDING_NAME = 'text-embedding-3-small'
K_DOCS = 5
SUBINDICES_MAP = {
    'vulnerability_factors': ['capacity', 'exposure', 'sensitivity'],
    'water': ['id_wate_01', 'id_wate_02', 'id_wate_03', 'id_wate_04', 'id_wate_05', 'id_wate_06'],
    'food': ['id_food_01', 'id_food_02', 'id_food_03', 'id_food_04', 'id_food_05', 'id_food_06'],
    'health': ['id_heal_01', 'id_heal_02', 'id_heal_03', 'id_heal_04', 'id_heal_05', 'id_heal_06'], 
    'ecosystems': ['id_ecos_01', 'id_ecos_02', 'id_ecos_03', 'id_ecos_04', 'id_ecos_05', 'id_ecos_06'],
    'habitat': ['id_habi_01', 'id_habi_02', 'id_habi_03', 'id_habi_04', 'id_habi_05', 'id_habi_06'], 
    'infrastructure': ['id_infr_01', 'id_infr_02', 'id_infr_03', 'id_infr_04', 'id_infr_05', 'id_infr_06'], 
}
COLOR_SCHEMES = {
    'scheme_1': {
        'line_color': 'blue',
        'fillcolor': 'rgba(0, 0, 255, 0.3)'
    },
    'scheme_2': {
        'line_color': 'red',
        'fillcolor': 'rgba(255, 0, 0, 0.3)'
    },
    'scheme_3': {
        'line_color': 'green',
        'fillcolor': 'rgba(0, 255, 0, 0.3)'
    },
    'scheme_4': {
        'line_color': 'orange',
        'fillcolor': 'rgba(255, 165, 0, 0.3)'
    },
    'scheme_5': {
        'line_color': 'purple',
        'fillcolor': 'rgba(128, 0, 128, 0.3)'
    },
    'scheme_6': {
        'line_color': 'teal',
        'fillcolor': 'rgba(0, 128, 128, 0.3)'
    },
    'scheme_7': {
        'line_color': 'gold',
        'fillcolor': 'rgba(255, 215, 0, 0.3)'
    }
}

PROMPT_SUBINDICES = """You are an AI powered recommendation system of climate policy papers based on vulnerability indices per country.
The indice is calculated on a scale of 0-1, with 0 being minimally vulnerable, and 1 being highly vulnerable.
For context, the definitions of the variables are from ND GAIN and below you have the definitions of all subindices:

ID  Indicator   Description
- ID_FOOD_01:   Projected change of cereal yields:  Projected amount that climate change is predicted to change food supply by mid-century for three staples: rice, wheat, and maize. The projections of the yield productions are obtained from five crop models (EPIC, GEPIC, LPJmL, pDSSAT, PEGASUS) and it assumes the effect of CO2 fertilization but does not adjust for changes in farming systems or irrigation.
- ID_FOOD_02:   Projected population change:    An indication of food demand by the mid-century. The projection data are from the World Bank Health Nutrition and Population Statistics (HNPStats) which provides country-level projection of population up to 2050.
- ID_FOOD_03:   Food import dependency: Proportion of cereal consumption obtained from imports. The definition of cereal is from FAO referred to as “crops harvested for dry grain only,” including wheat, rice, barley, maize, popcorn, rye, oats, millets, sorghum, buckwheat, quinoa, fonio, triticale, canary seed, mixed grain, and remaining types (FAO, n.d.). Cereal consumption is equal to production and imports minus exports.
- ID_FOOD_04:   Rural population:   This measure includes all people living in the rural regions of a country.
- ID_FOOD_05:   Agriculture capacity:   A combination of four indicators of agricultural technology: capacity to equip agriculture areas with irrigation, N+P205 total fertilizer use on arable and permanent crop area use, pesticide use, and tractor use. The irrigation measure obtained from FAO indicates the proportion of agriculture areas equipped with irrigation, but does not measure the amount of land that is indeed irrigated in a specific year. Therefore, it is a capacity measure. The fertilizer and pesticide measures are the total consumption of the active ingredients (for both fertilizer and pesticide) as the reported sum divided by hectare. The tractor use measures the number of wheel and crawler tractors used in agriculture. Together, these measures are combined into an indication of the accessibility of agriculture technological inputs.
- ID_FOOD_06:   Child malnutrition: A measure of malnutrition based on the percent of under-5-year-olds with a low weight for height ratio; usually taken as a good indicator of chronic malnutrition. An assumption is taken for this indicator that OECD countries have a default child malnutrition rate of 0.
- ID_WATE_01:   Projected change of annual runoff:  An indication of how climate change will bring changes to annual surface water resources by the mid of the century. Projected surface runoff data, defined as precipitation minus evapotranspiration and change in soil moisture storage, are provided by Aqueduct at World Resource Institute. Aqueduct uses the ensemble of six global circulation models (GCMs) from Coupled Model Intercomparison Project Phase 5 (CMIP5) chosen to represent a broad diversity of models that best reproduce the mean and standard deviation of recent stream flow records in 18 large river basins (Alkama et al., 2013). The database covers 14998 catchments derived from the Global Drainage and Basin Database.
- ID_WATE_02:   Projected change of annual groundwater recharge:    An indication of how climate change will bring changes on annual groundwater resource by mid-century. GWR data are provided by Goethe University Frankfurt (Portmann et al., 2013).
- ID_WATE_03:   Freshwater withdrawal rate: The proportion of total actual renewable water resources (including desalinated water) that is withdrawn in a specific year.
- ID_WATE_04:   Water dependency ratio: The proportion of the total renewable water resources originated outside the country, including the surface water and groundwater entering the country or secured by treaties.
- ID_WATE_05:   Dam capacity:   An indication of the capacity to adjust to the changing (temporal and geographical) distribution of freshwater resources, including changes due to climate change. It is a measure of the per capita dam storage capacities within one country, calculated by the per capita theoretical initial capacities of all dams, which does not allow for changes over time due to siltation.
- ID_WATE_06:   Access to reliable drinking water:  Commonly used indicator of the capacity to deliver reliable domestic water supplies. The drinking water sources are considered reliable if they have a household connection, public standpipe, borehole, protected well or spring, or rainwater collection.
- ID_HEAL_01:   Projected change of deaths from climate change-induced diseases:    An indication of the climate change impacts on several types of diseases. The indicator is a model-based estimate of the quality-adjusted loss of life years under several different climate scenarios. Disability-adjusted life year (DALY) due to malaria, an indication of the climate change impacts on vector-borne diseases, is excluded because more specific models have been used to project such impacts and it is assessed by another ND-GAIN indicator, the projected change of length of transmission season of vector-borne diseases.
- ID_HEAL_02:   Projected change in vector-borne diseases:  This indicator takes the projection of malaria LTS as an indication of the climate change impacts on vector-borne diseases. LTS data were taken from projections (Caminade, et al., 2014) that took the ensemble mean of malaria LTS over four malaria models and five GCMs. However, the incidence of vector-borne diseases is also strongly dependent on the quality of public health systems. In this indicator, the WHO estimated number of malarial cases per 1000 population per month of current LTS is used as a measure of these services.
- ID_HEAL_03:   Dependency on external resources for health services:   The percentage of external resources (e.g. bilateral payments, NGO operations, etc.) in total national health expenditure.
- ID_HEAL_04:   Slum population:    A slum household is defined as a group of individuals living under the same roof lacking one or more of life-supporting facilities: access to improved water, access to improved sanitation, sufficient-living area, or durability of housing. Tenure is included as a 5th element, but insufficient data is available (MDG, n.d.).
- ID_HEAL_05:   Medical staff:  Sum of the number of physicians, nurses, and midwives per 1000 population in the country. Increases in physicians, nurses, or midwives will have the same effect on the indicator.
- ID_HEAL_06:   Access to improved sanitation facilities:   Commonly used indicator of the capacity to control infectious diseases. The indicator is a proportion of the population with access to excreta disposal facilities that can effectively prevent human, animal, and insect contact with excreta.
- ID_ECOS_01:   Projected change of biome distribution: An indication of how climate change will impact the change of terrestrial biome biodiversity within a country by the end of the century. Data were taken from the global version of a dynamic vegetation model (MC1) (Gonzalez et al., 2010).
- ID_ECOS_02:   Projected change of marine biodiversity:    An indication of how climate change will impact the change of marine biodiversity in a country’s exclusive economic zones by mid-century. It is a measure based on projected changes in the distribution of 1066 exploited species of marine fish and invertebrates under climate envelope scenarios based on A1B scenarios (Cheung et al., 2009).
- ID_ECOS_03:   Natural capital dependency: Based on the World Bank’s Natural Capital Accounting project. This indicator of the strength of the dependency of social systems on ecosystem goods and services is based on the deployment of natural capital in national accounting, including national income and savings in the form of all assets and capital goods that are inputs to economic well-being (The World Bank, 2011). The natural capital related to ecosystem services includes: crop, pasture, forest (timber), forest (non-timber), and protected areas. Sub-surface capital such as oil, gas, and mineral reserves are not included.
- ID_ECOS_04:   Ecological footprint:   The ecological footprint estimates the number of hectares of land and water, both within and outside the country, that are needed to meet the average demand on ecosystem services by the population’s lifestyle. This is compared with the estimated capacity of a country’s ecosystems to regenerate and maintain ecosystem services for either internal use or export. This indicator uses the surplus or deficit of capacity to cover the demand within each country.
- ID_ECOS_05:   Protected biome:    Taken directly from the Yale Environmental Performance Index (EPI), the indicator “assesses the protection of biomes weighted by the proportion of a country’s territory the biome occupies.” EPI defines the indicator as follows: “It measures the degree to which a country achieves the target of protecting 17% of each terrestrial biome within its borders, weighted by the domestic contribution of each terrestrial biome… All biome protection percentages were capped at 17% so that higher protection in one biome cannot be used to offset lower protection in another.”
- ID_ECOS_06:   Engagement in international environmental conventions:  An indicator based on the country’s participation in international forums, which is an indicator of its capacity to engage in multilateral negotiations and to reach agreement on appropriate actions internally.
- ID_HABI_01:   Projected change of warm periods:   An indication of the probability of extreme heat under climate change by mid-century. This indicator uses the Warm Spell Duration Index (WSDI), which defines periods of excessive warmth using a percentile-based threshold calculated for a calendar 5-day window in the base period 1961-1990. WSDI counts the number of days in a year when the daily maximum of near-surface temperature exceeds the 90th percentile threshold for 6 consecutive days or longer (Alexander, et al., 2006; Sillmann, et al., 2013b).
- ID_HABI_02:   Projected change of flood hazard:   Flood hazard is measured by the predicted, monthly maximum precipitation in 5 consecutive days (rx5day). Rx5day is defined as monthly maximum consecutive 5-day precipitation. It is a measure of precipitation extreme under climate change, a risk factor for flood hazard (Kundzewicz & Schellnhuber, 2004).
- ID_HABI_03:   Urban concentration:    Urban concentration measures both the concentration of a country’s population within cities (i.e. the degree of urbanization in general) and the concentration of the urban population within a small number of large population centers (cities of 750,000 inhabitants or more) via the Herfindahl Index (Henderson, 2000; Van Eck & Koomen, 2008).
- ID_HABI_04:   Age dependency ratio:   An indication of the size of the vulnerable population in terms of ages. This indicator considers the population under 14 or above 65 as the vulnerable group.
- ID_HABI_05:   Quality of trade and transport infrastructure:  Logistics professionals' perception of a country's quality of trade and transport-related infrastructure (e.g. ports, railroads, roads, information technology), on a rating ranging from 1 (very low) to 5 (very high). Scores are averaged across all respondents.
- ID_HABI_06:   Paved roads:    Proportion of the total length of the roads that are paved. Paved roads are those finished with macadamized crushed stone, bitumen or equivalent, concrete, or cobblestones and expressed as a percentage of the stated length of the public road system.
- ID_INFR_01:   Projected change of hydropower generation capacity: An indication of the potential risk of hydropower generation capacity weighted by the importance of hydropower to one country, i.e. the proportion of the electricity production from hydroelectric sources. The data of the projected change are available at the sub-continental level, drawn from (Hamududu & Killingtveit, 2012).
- ID_INFR_02:   Projected change of sea level rise impacts: An indication of how coastal infrastructure will be impacted by the combined effect of sea level rise and potential storm surge by the end of the century. The indicator considers the proportion of land areas, adjacent to the ocean, that are lower than the projected sea level rise and the average height of storm surge.
- ID_INFR_03:   Dependency on imported energy:  A measure of the percentage of total energy use that is imported and thus not fully within a country’s control. Energy use refers to the use of primary energy before transformation to other end-use fuels, according to WDI, equal to indigenous production plus imports and stock changes, minus exports and fuels supplied to ships and aircraft engaged in international transport.
- ID_INFR_04:   Population living under 5m above sea level: The proportion of the population living in the area where elevation is 5 m or less. It is a simple measure of the population sensitive to coastal risks.
- ID_INFR_05:   Electricity access: The proportion of the population with access to grid-power.
- ID_INFR_06:   Disaster preparedness:  An indication of capacities to deal with climate-related nature disasters. This indicator uses monitoring from the Hyogo Framework Action (HFA). The HFA outlined an action plan from 2005 to 2015 to establish five priorities for disaster preparedness. Countries are monitored in two-year intervals against the five priorities by self-reported data.
- ID_ECON_01:   Doing business: The indicator took the World Bank Doing Business (DB) indicators as an indication of how countries are capable of attracting adaptation investment. The index assesses the investment climate in 10 topics using 40 indicators. The 10 topics are: starting a business, dealing with construction permits, getting electricity, registering property, getting credit, protecting investors, paying taxes, trading across borders, enforcing contracts, and resolving insolvency.
- ID_GOVE_01:   Political stability and non-violence:   An indicator directly from the World Governance Indicators (WGI), “capturing perceptions of the likelihood of political instability and/or politically-motivated violence, including terrorism.”
- ID_GOVE_02:   Control of corruption:  An indicator directly from the World Governance Indicators (WGI), “capturing perceptions from firms and households survey respondents and public, private, and NGO sector experts worldwide of public power exercised for private gain, including both petty and grand forms of corruption, as well as ‘capture’ of the state by elites and private interests.”
- ID_GOVE_03:   Regulatory quality: An indicator directly from the World Governance Indicators (WGI), “capturing perceptions of the ability of the government to formulate and implement sound policies and regulations that permit and promote private sector development.”
- ID_GOVE_04:   Rule of law:    An indicator directly from the World Governance Indicators (WGI), “capturing perceptions from firms and households survey respondents and public, private, and NGO sector experts worldwide of confidence in and abide by the rules of society, and in particular the quality of contract enforcement, property rights, the police, and the courts, as well as the likelihood of crime and violence.”
- ID_SOCI_01:   Social inequality:  The country’s poorest quintile’s share in national income or consumption.
- ID_SOCI_02:   ICT infrastructure: A composite indicator from 4 sub-indicators that consider both the access to and the use of ICT infrastructure: mobile phone subscription per 100 persons, fixed phone subscription per 100 persons, fixed broadband subscription per 100 persons, and percent of individuals using the internet. Data for all four are available from the annual ICT Development Index (IDI) database. The mobile phone subscription measures the subscription to public mobile services including the post-paid and prepaid subscriptions (World Development Indicators, 2014). The fixed phone subscription is assumed to measure the active number of analog fixed telephone lines, ISDN channels, fixed wireless (WLL), public payphones, and VoIP subscription (International Telecommunication Union, 2010). The fixed broadband subscription refers to the number of broadband subscribers with a digital subscriber line, cable modem, or another high-speed technology (World Development Indicators, 2014). The individual internet use measures the proportion of internet users with access to the worldwide network (World Development Indicators, 2014).
- ID_SOCI_03:   Education:  A measure of enrolment in tertiary education to represent the education level of a country. It is approximated by the ratio of the enrollment in tertiary education (regardless of age) to the population of the age group that officially corresponds to tertiary education attendance.
- ID_SOCI_04:   Innovation: A measure of the number of patent applications, filed through the Patent Cooperation Treaty procedure or with a national patent office, by residents per capita.

Now consider the following country:

{slc_country}

Its subindices for the topic {topic} are:

{subindices}

Now, based on the definitions given above and its subindices, what are this country’s main climate {type} for this topic?
"""


def generate_analysis(subindex, prompt, slc_country, type):
    output = qa_with_sources(prompt)

    if type == 'vulnerabilities':
        st.error(output['answer'], icon="ℹ️")
        
    if type == 'recommendations':
        st.success(output['answer'], icon="✅")

    st.write(format_sources(output['sources']))


def format_sources(matched_docs):
    matched_docs = matched_docs.split(', ')
    sources = [doc.split('.')[0] for doc in set(matched_docs)]
    sources_formatted = '\n'.join([f"- {filename.replace('_', ' ')}" for filename in sources])
    return f"**Sources:**\n{sources_formatted}"


def generate_radar_plot(df, 
                        country,
                        cols, 
                        line_color='blue', 
                        fillcolor='rgba(0, 128, 128, 0.3)', 
                        width=600, 
                        ploted_font_size=15,
                        tickfont_size=17, 
                        title='Radar Plot'):
    """
    Function to generate a radar plot for a given country with increased font size,
    displaying values on the radar map, and including a custom title.
    """
    
    # Filter the data for the selected country
    country_data = df[df['country'] == country][cols]
    
    # Melt the data for radar plot
    melted_data = country_data.melt(var_name='Category', value_name='Value')
    
    # Create radar plot
    fig = px.line_polar(melted_data, r='Value', theta='Category', line_close=True)
    
    # Update traces with color and show text (values) on radar points
    fig.update_traces(fill='toself', line_color=line_color, fillcolor=fillcolor, 
                      mode='markers+text', text=melted_data['Value'].round(2), 
                      textposition='top center')
    
    # Update layout with increased font size, custom dimensions, and title
    fig.update_layout(
        polar=dict(
            radialaxis=dict(
                visible=True,
                range=[0, 1],
                tickfont=dict(size=14),  # Increase font size for the axis
            ),
            angularaxis=dict(
                tickfont=dict(size=tickfont_size)  # Increase font size for category labels
            )
        ),
        width=width,
        height=width,
        font=dict(size=ploted_font_size),  # Increase general font size
        title=dict(text=title, x=0.0, xanchor='left', font=dict(size=20, color=line_color)),  # Set custom title
        margin=dict(t=120, b=0, l=0, r=0)  # Add padding for the title, adjust as needed
    )
    
    # Display the radar plot in Streamlit
    st.plotly_chart(fig)


embedding = OpenAIEmbeddings(openai_api_key=openai.api_key, model=EMBEDDING_NAME)
index = PineconeVectorStore.get_pinecone_index(pinecone_api_key=pinecone_api_key, index_name=INDEX_NAME)
vectordb = PineconeVectorStore(pinecone_api_key=pinecone_api_key, index_name=INDEX_NAME, embedding=embedding)
llm = ChatOpenAI(openai_api_key=openai.api_key, model_name=LLM_NAME, temperature=0.0)
retriever = vectordb.as_retriever(search_kwargs={'k': K_DOCS})

qa_with_sources = RetrievalQAWithSourcesChain.from_chain_type(  
    llm=llm,  
    chain_type="stuff",  
    retriever=retriever 
)

st.set_page_config(layout='wide')

col1, col2 = st.columns(spec=[0.1, 0.9], gap='small')
with col1:
    st.image('webapp/imgs/logo.png', width=160)

with col2:
    st.title('CCAI - Climate Vulnerability Index')
    st.markdown('''Welcome to the **Climate Vulnerability Compass**, a tool designed to convert complex climate vulnerability data from the Notre Dame Global Adaptation Index (ND-GAIN) into clear, practical policy pathways. Instead of sifting through indexes or searching for papers, our platform provides a straightforward guide that helps policymakers navigate climate risks and develop informed strategies for their regions.
                **A bit about this tool**. The **Climate Vulnerability Compass** is designed to make complex climate vulnerability data more accessible and easy to understand. By translating the detailed analyses from ND-GAIN into clear policy pathways, our platform helps policymakers craft informed strategies that address the unique climate vulnerability challenges of their regions. This tool serves as a crucial bridge between scientific research and practical decision-making, ensuring that the complexities of climate science are effectively communicated in a way that leads to straightforward policy pathways.
                ''')

df = pd.read_csv('tabular_data/all_indicators.csv')

st.markdown("To start exploring your region’s climate vulnerabilities and discover tailored policy pathways with our translation tool, please select the country")
slc_country = st.selectbox('Select the country:', df['country'].unique(), placeholder='country')

st.header(f'{slc_country}: Main Climate Vulnerabilities Today')
st.write('Analysis based on capacity, exposure, and sensitivity to climate change (ref ND-Gains).')

# query = """You are an environmentalist specializing in recommending climate adaptation policies for countries that want to minimize their exposure to disaster risks.

# Summarize the main climate vulnerabilities to which the following country is exposed and provide actionable recommendations to minimize them.
# Split the answer into two sections: one for the summary of the 'Main Climate Vulnerabilities' and another called 'Actionable Recommendations' for the recommendations.

# Country: {slc_country}"""

# output = qa_with_sources(query.format(slc_country=slc_country))


col1, col2, col3, col4 = st.columns(spec=[0.4, 0.2, 0.2, 0.2], gap='medium')
with col1:
    generate_radar_plot(df, 
                        slc_country, 
                        cols=SUBINDICES_MAP['vulnerability_factors'], 
                        line_color=COLOR_SCHEMES['scheme_1']['line_color'], 
                        fillcolor=COLOR_SCHEMES['scheme_1']['fillcolor'], 
                        width=550, 
                        tickfont_size=17,
                        title='Main Vulnerabilities Indices')
    del SUBINDICES_MAP['vulnerability_factors']
    del COLOR_SCHEMES['scheme_1']

st.write('---')
st.header(f'{slc_country} Compared to Other Countries')
compare_countries.plot_comparison_chart(slc_country)

with col2:
    generate_radar_plot(df, 
                        slc_country, 
                        cols=SUBINDICES_MAP['water'], 
                        line_color=COLOR_SCHEMES[f'scheme_2']['line_color'], 
                        fillcolor=COLOR_SCHEMES[f'scheme_2']['fillcolor'], 
                        width=350,
                        ploted_font_size=14,
                        tickfont_size=13,
                        title='Water Subindices')

    generate_radar_plot(df, 
                        slc_country, 
                        cols=SUBINDICES_MAP['food'], 
                        line_color=COLOR_SCHEMES[f'scheme_3']['line_color'], 
                        fillcolor=COLOR_SCHEMES[f'scheme_3']['fillcolor'], 
                        width=350,
                        ploted_font_size=14,
                        tickfont_size=13,
                        title='Food Subindices')

with col3:
    generate_radar_plot(df, 
                        slc_country, 
                        cols=SUBINDICES_MAP['health'], 
                        line_color=COLOR_SCHEMES[f'scheme_4']['line_color'], 
                        fillcolor=COLOR_SCHEMES[f'scheme_4']['fillcolor'], 
                        width=350,
                        ploted_font_size=14,
                        tickfont_size=13,
                        title='Health Subindices')

    generate_radar_plot(df, 
                        slc_country, 
                        cols=SUBINDICES_MAP['ecosystems'], 
                        line_color=COLOR_SCHEMES[f'scheme_5']['line_color'], 
                        fillcolor=COLOR_SCHEMES[f'scheme_5']['fillcolor'], 
                        width=350,
                        ploted_font_size=14,
                        tickfont_size=13,
                        title='Ecosystems Subindices')

with col4:
    generate_radar_plot(df, 
                        slc_country, 
                        cols=SUBINDICES_MAP['habitat'], 
                        line_color=COLOR_SCHEMES[f'scheme_6']['line_color'], 
                        fillcolor=COLOR_SCHEMES[f'scheme_6']['fillcolor'], 
                        width=350,
                        ploted_font_size=14,
                        tickfont_size=13,
                        title='Habitat Subindices')

    generate_radar_plot(df, 
                        slc_country, 
                        cols=SUBINDICES_MAP['infrastructure'], 
                        line_color=COLOR_SCHEMES[f'scheme_7']['line_color'], 
                        fillcolor=COLOR_SCHEMES[f'scheme_7']['fillcolor'], 
                        width=350,
                        ploted_font_size=14,
                        tickfont_size=13,
                        title='Infrastructure Subindices')


st.header(f'Some strategies for {slc_country} to start preparing for the future')
st.caption('Breakdown per indicator. AI models can hallucinate. Always verify important information.')

tab1, tab2, tab3, tab4, tab5, tab6 = st.tabs([k.replace('_', ' ').capitalize() for k in SUBINDICES_MAP.keys()])

with tab1:
    with st.spinner('Generating recommendations...'):
        col1, col2 = st.columns(spec=[1, 1], gap='medium')
        with col1:
            generate_analysis(subindex='water', 
                              prompt=PROMPT_SUBINDICES.format(topic='water', 
                                    subindices=df[df['country'] == slc_country][SUBINDICES_MAP['water']].to_dict(orient='records'), 
                                    slc_country=slc_country, 
                                    type='vulnerabilities'), 
                              slc_country=slc_country, 
                              type='vulnerabilities')

        with col2:
            generate_analysis(subindex='water', 
                              prompt=PROMPT_SUBINDICES.format(topic='water', 
                                    subindices=df[df['country'] == slc_country][SUBINDICES_MAP['water']].to_dict(orient='records'), 
                                    slc_country=slc_country, 
                                    type='recommendations'), 
                              slc_country=slc_country, 
                              type='recommendations')

with tab2:
    with st.spinner('Generating recommendations...'):
        col1, col2 = st.columns(spec=[1, 1], gap='medium')
        with col1:
            generate_analysis(subindex='food', 
                              prompt=PROMPT_SUBINDICES.format(topic='food', 
                                    subindices=df[df['country'] == slc_country][SUBINDICES_MAP['food']].to_dict(orient='records'), 
                                    slc_country=slc_country, 
                                    type='vulnerabilities'), 
                              slc_country=slc_country, 
                              type='vulnerabilities')

        with col2:
            generate_analysis(subindex='food', 
                              prompt=PROMPT_SUBINDICES.format(topic='food', 
                                    subindices=df[df['country'] == slc_country][SUBINDICES_MAP['food']].to_dict(orient='records'), 
                                    slc_country=slc_country, 
                                    type='recommendations'), 
                              slc_country=slc_country, 
                              type='recommendations')

with tab3:
    with st.spinner('Generating recommendations...'):
        col1, col2 = st.columns(spec=[1, 1], gap='medium')
        with col1:
            generate_analysis(subindex='health', 
                              prompt=PROMPT_SUBINDICES.format(topic='health', 
                                    subindices=df[df['country'] == slc_country][SUBINDICES_MAP['health']].to_dict(orient='records'), 
                                    slc_country=slc_country, 
                                    type='vulnerabilities'), 
                              slc_country=slc_country, 
                              type='vulnerabilities')

        with col2:
            generate_analysis(subindex='health', 
                              prompt=PROMPT_SUBINDICES.format(topic='health', 
                                    subindices=df[df['country'] == slc_country][SUBINDICES_MAP['health']].to_dict(orient='records'), 
                                    slc_country=slc_country, 
                                    type='recommendations'), 
                              slc_country=slc_country, 
                              type='recommendations')

with tab4:
    with st.spinner('Generating recommendations...'):
        col1, col2 = st.columns(spec=[1, 1], gap='medium')
        with col1:
            generate_analysis(subindex='ecosystems', 
                              prompt=PROMPT_SUBINDICES.format(topic='ecosystems', 
                                    subindices=df[df['country'] == slc_country][SUBINDICES_MAP['ecosystems']].to_dict(orient='records'), 
                                    slc_country=slc_country, 
                                    type='vulnerabilities'), 
                              slc_country=slc_country, 
                              type='vulnerabilities')

        with col2:
            generate_analysis(subindex='ecosystems', 
                              prompt=PROMPT_SUBINDICES.format(topic='ecosystems', 
                                    subindices=df[df['country'] == slc_country][SUBINDICES_MAP['ecosystems']].to_dict(orient='records'), 
                                    slc_country=slc_country, 
                                    type='recommendations'), 
                              slc_country=slc_country, 
                              type='recommendations')
            
with tab5:
    with st.spinner('Generating recommendations...'):
        col1, col2 = st.columns(spec=[1, 1], gap='medium')
        with col1:
            generate_analysis(subindex='habitat', 
                              prompt=PROMPT_SUBINDICES.format(topic='habitat', 
                                    subindices=df[df['country'] == slc_country][SUBINDICES_MAP['habitat']].to_dict(orient='records'), 
                                    slc_country=slc_country, 
                                    type='vulnerabilities'), 
                              slc_country=slc_country, 
                              type='vulnerabilities')

        with col2:
            generate_analysis(subindex='habitat', 
                              prompt=PROMPT_SUBINDICES.format(topic='habitat', 
                                    subindices=df[df['country'] == slc_country][SUBINDICES_MAP['habitat']].to_dict(orient='records'), 
                                    slc_country=slc_country, 
                                    type='recommendations'), 
                              slc_country=slc_country, 
                              type='recommendations')


with tab6:
    with st.spinner('Generating recommendations...'):
        col1, col2 = st.columns(spec=[1, 1], gap='medium')
        with col1:
            generate_analysis(subindex='infrastructure', 
                              prompt=PROMPT_SUBINDICES.format(topic='infrastructure', 
                                    subindices=df[df['country'] == slc_country][SUBINDICES_MAP['infrastructure']].to_dict(orient='records'), 
                                    slc_country=slc_country, 
                                    type='vulnerabilities'), 
                              slc_country=slc_country, 
                              type='vulnerabilities')

        with col2:
            generate_analysis(subindex='infrastructure', 
                              prompt=PROMPT_SUBINDICES.format(topic='infrastructure', 
                                    subindices=df[df['country'] == slc_country][SUBINDICES_MAP['infrastructure']].to_dict(orient='records'), 
                                    slc_country=slc_country, 
                                    type='recommendations'), 
                              slc_country=slc_country, 
                              type='recommendations')

expander = st.expander("Appendix")
expander.write('''Dataset sourced from [ND-GAIN](https://gain.nd.edu/our-work/country-index/).''')
dictionary = pd.read_csv("tabular_data/index_dictionary.csv")
expander.table(dictionary)

st.link_button("Submit your feedback here", "https://docs.google.com/forms/d/e/1FAIpQLScACr7FqGAepFPMF29oBRRaH0mc829AGdmDJC4tfSZ6BAeK3Q/viewform?usp=sf_link")